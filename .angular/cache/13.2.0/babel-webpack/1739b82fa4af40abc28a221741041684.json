{"ast":null,"code":"import { Observable, merge, from, of } from 'rxjs';\nimport { delay, map, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport { onChildAdded, onChildRemoved, onChildChanged, onChildMoved, onValue, off, get as get$1 } from 'firebase/database';\nimport { __assign, __spreadArray } from 'tslib';\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar _a;\n\nvar ListenEvent;\n\n(function (ListenEvent) {\n  ListenEvent[\"added\"] = \"child_added\";\n  ListenEvent[\"removed\"] = \"child_removed\";\n  ListenEvent[\"changed\"] = \"child_changed\";\n  ListenEvent[\"moved\"] = \"child_moved\";\n  ListenEvent[\"value\"] = \"value\";\n})(ListenEvent || (ListenEvent = {}));\n\nvar ListenerMethods = Object.freeze((_a = {}, _a[ListenEvent.added] = onChildAdded, _a[ListenEvent.removed] = onChildRemoved, _a[ListenEvent.changed] = onChildChanged, _a[ListenEvent.moved] = onChildMoved, _a[ListenEvent.value] = onValue, _a));\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\n\nfunction fromRef(ref, event) {\n  return new Observable(function (subscriber) {\n    var fn = ListenerMethods[event](ref, function (snapshot, prevKey) {\n      subscriber.next({\n        snapshot: snapshot,\n        prevKey: prevKey,\n        event: event\n      });\n    }, subscriber.error.bind(subscriber));\n    return {\n      unsubscribe: function () {\n        off(ref, event, fn);\n      }\n    };\n  }).pipe( // Ensures subscribe on observable is async. This handles\n  // a quirk in the SDK where on/once callbacks can happen\n  // synchronously.\n  delay(0));\n}\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check the length of the provided array. If it is empty return an array\n * that is populated with all the Realtime Database child events.\n * @param events\n */\n\n\nfunction validateEventsArray(events) {\n  if (events == null || events.length === 0) {\n    events = [ListenEvent.added, ListenEvent.removed, ListenEvent.changed, ListenEvent.moved];\n  }\n\n  return events;\n}\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Get the snapshot changes of an object\n * @param query\n */\n\n\nfunction object(query) {\n  return fromRef(query, ListenEvent.value);\n}\n/**\n * Get an array of object values, optionally with a mapped key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\n\n\nfunction objectVal(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return fromRef(query, ListenEvent.value).pipe(map(function (change) {\n    return changeToData(change, options);\n  }));\n}\n\nfunction changeToData(change, options) {\n  var _a;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var val = change.snapshot.val(); // match the behavior of the JS SDK when the snapshot doesn't exist\n\n  if (!change.snapshot.exists()) {\n    return val;\n  } // val can be a primitive type\n\n\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  return __assign(__assign({}, val), options.keyField ? (_a = {}, _a[options.keyField] = change.snapshot.key, _a) : null);\n}\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction stateChanges(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var events = validateEventsArray(options.events);\n  var childEvent$ = events.map(function (event) {\n    return fromRef(query, event);\n  });\n  return merge.apply(void 0, childEvent$);\n}\n\nfunction get(query) {\n  return from(get$1(query)).pipe(map(function (snapshot) {\n    var event = ListenEvent.value;\n    return {\n      snapshot: snapshot,\n      prevKey: null,\n      event: event\n    };\n  }));\n}\n\nfunction list(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var events = validateEventsArray(options.events);\n  return get(query).pipe(switchMap(function (change) {\n    if (!change.snapshot.exists()) {\n      return of([]);\n    }\n\n    var childEvent$ = [of(change)];\n    events.forEach(function (event) {\n      childEvent$.push(fromRef(query, event));\n    });\n    return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n  }), distinctUntilChanged());\n}\n/**\n * Get an object mapped to its value, and optionally its key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\n\n\nfunction listVal(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return list(query).pipe(map(function (arr) {\n    return arr.map(function (change) {\n      return changeToData(change, options);\n    });\n  }));\n}\n\nfunction positionFor(changes, key) {\n  var len = changes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (changes[i].snapshot.key === key) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction positionAfter(changes, prevKey) {\n  if (prevKey == null) {\n    return 0;\n  } else {\n    var i = positionFor(changes, prevKey);\n\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, change) {\n  var snapshot = change.snapshot,\n      prevKey = change.prevKey,\n      event = change.event;\n  var key = snapshot.key;\n  var currentKeyPosition = positionFor(current, key);\n  var afterPreviousKeyPosition = positionAfter(current, prevKey || undefined);\n\n  switch (event) {\n    case ListenEvent.value:\n      if (change.snapshot && change.snapshot.exists()) {\n        var prevKey_1 = null;\n        change.snapshot.forEach(function (snapshot) {\n          var action = {\n            snapshot: snapshot,\n            event: ListenEvent.value,\n            prevKey: prevKey_1\n          };\n          prevKey_1 = snapshot.key;\n          current = __spreadArray(__spreadArray([], current), [action]);\n          return false;\n        });\n      }\n\n      return current;\n\n    case ListenEvent.added:\n      if (currentKeyPosition > -1) {\n        // check that the previouskey is what we expect, else reorder\n        var previous = current[currentKeyPosition - 1];\n\n        if ((previous && previous.snapshot.key || null) !== prevKey) {\n          current = current.filter(function (x) {\n            return x.snapshot.key !== snapshot.key;\n          });\n          current.splice(afterPreviousKeyPosition, 0, change);\n        }\n      } else if (prevKey == null) {\n        return __spreadArray([change], current);\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, change);\n      }\n\n      return current;\n\n    case ListenEvent.removed:\n      return current.filter(function (x) {\n        return x.snapshot.key !== snapshot.key;\n      });\n\n    case ListenEvent.changed:\n      return current.map(function (x) {\n        return x.snapshot.key === key ? change : x;\n      });\n\n    case ListenEvent.moved:\n      if (currentKeyPosition > -1) {\n        var data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n\n      return current;\n    // default will also remove null results\n\n    default:\n      return current;\n  }\n}\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nfunction auditTrail(query, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var auditTrail$ = stateChanges(query, options).pipe(scan(function (current, changes) {\n    return __spreadArray(__spreadArray([], current), [changes]);\n  }, []));\n  return waitForLoaded(query, auditTrail$);\n}\n\nfunction loadedData(query) {\n  // Create an observable of loaded values to retrieve the\n  // known dataset. This will allow us to know what key to\n  // emit the \"whole\" array at when listening for child events.\n  return fromRef(query, ListenEvent.value).pipe(map(function (data) {\n    // Store the last key in the data set\n    var lastKeyToLoad; // Loop through loaded dataset to find the last key\n\n    data.snapshot.forEach(function (child) {\n      lastKeyToLoad = child.key;\n      return false;\n    }); // return data set and the current last key loaded\n\n    return {\n      data: data,\n      lastKeyToLoad: lastKeyToLoad\n    };\n  }));\n}\n\nfunction waitForLoaded(query, snap$) {\n  var loaded$ = loadedData(query);\n  return loaded$.pipe(withLatestFrom(snap$), // Get the latest values from the \"loaded\" and \"child\" datasets\n  // We can use both datasets to form an array of the latest values.\n  map(function (_a) {\n    var loaded = _a[0],\n        changes = _a[1]; // Store the last key in the data set\n\n    var lastKeyToLoad = loaded.lastKeyToLoad; // Store all child keys loaded at this point\n\n    var loadedKeys = changes.map(function (change) {\n      return change.snapshot.key;\n    });\n    return {\n      changes: changes,\n      lastKeyToLoad: lastKeyToLoad,\n      loadedKeys: loadedKeys\n    };\n  }), // This is the magical part, only emit when the last load key\n  // in the dataset has been loaded by a child event. At this point\n  // we can assume the dataset is \"whole\".\n  skipWhile(function (meta) {\n    return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1;\n  }), // Pluck off the meta data because the user only cares\n  // to iterate through the snapshots\n  map(function (meta) {\n    return meta.changes;\n  }));\n}\n\nexport { ListenEvent, ListenerMethods, auditTrail, changeToData, fromRef, list, listVal, object, objectVal, stateChanges };","map":{"version":3,"sources":["C:/Users/TULABYTE.NET/ecommerceApp/ecommerce/node_modules/rxfire/database/index.esm.js"],"names":["Observable","merge","from","of","delay","map","switchMap","scan","distinctUntilChanged","withLatestFrom","skipWhile","onChildAdded","onChildRemoved","onChildChanged","onChildMoved","onValue","off","get","get$1","__assign","__spreadArray","_a","ListenEvent","ListenerMethods","Object","freeze","added","removed","changed","moved","value","fromRef","ref","event","subscriber","fn","snapshot","prevKey","next","error","bind","unsubscribe","pipe","validateEventsArray","events","length","object","query","objectVal","options","change","changeToData","val","exists","keyField","key","stateChanges","childEvent$","apply","list","forEach","push","buildView","listVal","arr","positionFor","changes","len","i","positionAfter","current","currentKeyPosition","afterPreviousKeyPosition","undefined","prevKey_1","action","previous","filter","x","splice","slice","data","auditTrail","auditTrail$","waitForLoaded","loadedData","lastKeyToLoad","child","snap$","loaded$","loaded","loadedKeys","meta","indexOf"],"mappings":"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","sourcesContent":["import { Observable, merge, from, of } from 'rxjs';\nimport { delay, map, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport { onChildAdded, onChildRemoved, onChildChanged, onChildMoved, onValue, off, get as get$1 } from 'firebase/database';\nimport { __assign, __spreadArray } from 'tslib';\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nvar ListenEvent;\n(function (ListenEvent) {\n    ListenEvent[\"added\"] = \"child_added\";\n    ListenEvent[\"removed\"] = \"child_removed\";\n    ListenEvent[\"changed\"] = \"child_changed\";\n    ListenEvent[\"moved\"] = \"child_moved\";\n    ListenEvent[\"value\"] = \"value\";\n})(ListenEvent || (ListenEvent = {}));\nvar ListenerMethods = Object.freeze((_a = {},\n    _a[ListenEvent.added] = onChildAdded,\n    _a[ListenEvent.removed] = onChildRemoved,\n    _a[ListenEvent.changed] = onChildChanged,\n    _a[ListenEvent.moved] = onChildMoved,\n    _a[ListenEvent.value] = onValue,\n    _a));\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\nfunction fromRef(ref, event) {\n    return new Observable(function (subscriber) {\n        var fn = ListenerMethods[event](ref, function (snapshot, prevKey) {\n            subscriber.next({ snapshot: snapshot, prevKey: prevKey, event: event });\n        }, subscriber.error.bind(subscriber));\n        return {\n            unsubscribe: function () {\n                off(ref, event, fn);\n            }\n        };\n    }).pipe(\n    // Ensures subscribe on observable is async. This handles\n    // a quirk in the SDK where on/once callbacks can happen\n    // synchronously.\n    delay(0));\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Check the length of the provided array. If it is empty return an array\n * that is populated with all the Realtime Database child events.\n * @param events\n */\nfunction validateEventsArray(events) {\n    if (events == null || events.length === 0) {\n        events = [\n            ListenEvent.added,\n            ListenEvent.removed,\n            ListenEvent.changed,\n            ListenEvent.moved\n        ];\n    }\n    return events;\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get the snapshot changes of an object\n * @param query\n */\nfunction object(query) {\n    return fromRef(query, ListenEvent.value);\n}\n/**\n * Get an array of object values, optionally with a mapped key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nfunction objectVal(query, options) {\n    if (options === void 0) { options = {}; }\n    return fromRef(query, ListenEvent.value).pipe(map(function (change) { return changeToData(change, options); }));\n}\nfunction changeToData(change, options) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var val = change.snapshot.val();\n    // match the behavior of the JS SDK when the snapshot doesn't exist\n    if (!change.snapshot.exists()) {\n        return val;\n    }\n    // val can be a primitive type\n    if (typeof val !== 'object') {\n        return val;\n    }\n    return __assign(__assign({}, val), (options.keyField ? (_a = {}, _a[options.keyField] = change.snapshot.key, _a) : null));\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction stateChanges(query, options) {\n    if (options === void 0) { options = {}; }\n    var events = validateEventsArray(options.events);\n    var childEvent$ = events.map(function (event) { return fromRef(query, event); });\n    return merge.apply(void 0, childEvent$);\n}\nfunction get(query) {\n    return from(get$1(query)).pipe(map(function (snapshot) {\n        var event = ListenEvent.value;\n        return { snapshot: snapshot, prevKey: null, event: event };\n    }));\n}\nfunction list(query, options) {\n    if (options === void 0) { options = {}; }\n    var events = validateEventsArray(options.events);\n    return get(query).pipe(switchMap(function (change) {\n        if (!change.snapshot.exists()) {\n            return of([]);\n        }\n        var childEvent$ = [of(change)];\n        events.forEach(function (event) {\n            childEvent$.push(fromRef(query, event));\n        });\n        return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\n/**\n * Get an object mapped to its value, and optionally its key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nfunction listVal(query, options) {\n    if (options === void 0) { options = {}; }\n    return list(query).pipe(map(function (arr) {\n        return arr.map(function (change) { return changeToData(change, options); });\n    }));\n}\nfunction positionFor(changes, key) {\n    var len = changes.length;\n    for (var i = 0; i < len; i++) {\n        if (changes[i].snapshot.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (prevKey == null) {\n        return 0;\n    }\n    else {\n        var i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, change) {\n    var snapshot = change.snapshot, prevKey = change.prevKey, event = change.event;\n    var key = snapshot.key;\n    var currentKeyPosition = positionFor(current, key);\n    var afterPreviousKeyPosition = positionAfter(current, prevKey || undefined);\n    switch (event) {\n        case ListenEvent.value:\n            if (change.snapshot && change.snapshot.exists()) {\n                var prevKey_1 = null;\n                change.snapshot.forEach(function (snapshot) {\n                    var action = {\n                        snapshot: snapshot,\n                        event: ListenEvent.value,\n                        prevKey: prevKey_1\n                    };\n                    prevKey_1 = snapshot.key;\n                    current = __spreadArray(__spreadArray([], current), [action]);\n                    return false;\n                });\n            }\n            return current;\n        case ListenEvent.added:\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                var previous = current[currentKeyPosition - 1];\n                if (((previous && previous.snapshot.key) || null) !== prevKey) {\n                    current = current.filter(function (x) { return x.snapshot.key !== snapshot.key; });\n                    current.splice(afterPreviousKeyPosition, 0, change);\n                }\n            }\n            else if (prevKey == null) {\n                return __spreadArray([change], current);\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, change);\n            }\n            return current;\n        case ListenEvent.removed:\n            return current.filter(function (x) { return x.snapshot.key !== snapshot.key; });\n        case ListenEvent.changed:\n            return current.map(function (x) { return (x.snapshot.key === key ? change : x); });\n        case ListenEvent.moved:\n            if (currentKeyPosition > -1) {\n                var data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction auditTrail(query, options) {\n    if (options === void 0) { options = {}; }\n    var auditTrail$ = stateChanges(query, options).pipe(scan(function (current, changes) { return __spreadArray(__spreadArray([], current), [changes]); }, []));\n    return waitForLoaded(query, auditTrail$);\n}\nfunction loadedData(query) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, ListenEvent.value).pipe(map(function (data) {\n        // Store the last key in the data set\n        var lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.snapshot.forEach(function (child) {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        // return data set and the current last key loaded\n        return { data: data, lastKeyToLoad: lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, snap$) {\n    var loaded$ = loadedData(query);\n    return loaded$.pipe(withLatestFrom(snap$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map(function (_a) {\n        var loaded = _a[0], changes = _a[1];\n        // Store the last key in the data set\n        var lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        var loadedKeys = changes.map(function (change) { return change.snapshot.key; });\n        return { changes: changes, lastKeyToLoad: lastKeyToLoad, loadedKeys: loadedKeys };\n    }), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile(function (meta) {\n        return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1;\n    }), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map(function (meta) { return meta.changes; }));\n}\n\nexport { ListenEvent, ListenerMethods, auditTrail, changeToData, fromRef, list, listVal, object, objectVal, stateChanges };\n"]},"metadata":{},"sourceType":"module"}